name: Build and Release Windows EXE

permissions:
  contents: write

on:
  push:
    branches:
      - master
    tags:
      - '*'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Get version from tag or commit
        id: get_version
        run: |
          TAG=$(git describe --tags --exact-match 2>/dev/null || echo "")
          if [ -n "$TAG" ]; then
            VERSION="$TAG"
          else
            BASE_TAG=$(git describe --tags --abbrev=0 || echo "0.1.0")
            COMMITS=$(git rev-list $BASE_TAG..HEAD --count || echo "0")
            SHORT_SHA=$(git rev-parse --short HEAD)
            VERSION="${BASE_TAG}.${COMMITS}+${SHORT_SHA}"
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
        shell: bash

      - name: Restore dependencies
        run: dotnet restore ./NudgeTimer.csproj

      - name: Build and publish self-contained EXE
        run: dotnet publish ./NudgeTimer.csproj -c Release -r win-x64 --self-contained true -p:Version=${{ env.VERSION }} -o publish

      - name: Rename EXE with version
        run: mv publish/NudgeTimer.exe publish/NudgeTimer-${{ env.VERSION }}.exe

      - name: Create GitHub Release
        if: startsWith(env.VERSION, 'v') # Only create a release if on a tag (e.g., v1.2.3)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload EXE to Release
        if: startsWith(env.VERSION, 'v')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          files: publish/NudgeTimer-${{ env.VERSION }}.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}